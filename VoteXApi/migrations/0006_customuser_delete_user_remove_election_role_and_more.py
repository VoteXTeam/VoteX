# Generated by Django 4.2.1 on 2023-06-05 12:50

import datetime
import django.contrib.auth.models
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('VoteXApi', '0005_alter_election_end_of_voting_candidate'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=50, unique=True)),
                ('register_date', models.DateTimeField(auto_now_add=True)),
                ('region', models.CharField(choices=[('VINNYTSIA', 'vinnytsia'), ('VOLYN', 'volyn'), ('DNIPROPETROVSK', 'dnipropetrovsk'), ('DONETSK', 'donetsk'), ('ZHYTOMYR', 'zhytomyr'), ('ZAKARPATTIA', 'zakarpattia'), ('ZAPORIZHZHIA', 'zaporizhzhia'), ('IVANO_FRANKIVSK', 'ivano-frankivsk'), ('KYIV', 'kyiv'), ('KIROVOHRAD', 'kirovohrad'), ('LUHANSK', 'luhansk'), ('LVIV', 'lviv'), ('MYKOLAIV', 'mykolaiv'), ('ODESA', 'odesa'), ('POLTAVA', 'poltava'), ('RIVNE', 'rivne'), ('SUMY', 'sumy'), ('TERNOPIL', 'ternopil'), ('KHARKIV', 'kharkiv'), ('KHERSON', 'kherson'), ('KHMELNYTSKYI', 'khmelnytskyi'), ('CHERKASY', 'cherkasy'), ('CHERNIVTSI', 'chernivtsi'), ('CHERNIHIV', 'chernihiv')], max_length=45, null=True)),
                ('organization', models.CharField(choices=[('SOFTSERVE', 'softserve'), ('GOOGLE', 'google'), ('BING', 'bing')], max_length=45, null=True)),
                ('groups', models.ManyToManyField(blank=True, related_name='related_groups', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='related_permissions', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'permissions': (('election_admin', 'Can Edit, Remove, and Add Elections'),),
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.DeleteModel(
            name='User',
        ),
        migrations.RemoveField(
            model_name='election',
            name='role',
        ),
        migrations.AlterField(
            model_name='election',
            name='end_of_voting',
            field=models.DateTimeField(default=datetime.datetime(2023, 6, 6, 15, 50, 3, 43802)),
        ),
    ]
